@using BlogSite.Services
@model BlogAndCommentViewModel
@inject AuthenticationService authService

<div class="getBlog">
    <h1>@Model.BlogTitle</h1>
    <br />

    <img class="blogImage" src="@Model.ImageUrl" />

    <h5>@Model.BlogDescription</h5>
    <span>@Model.BlogText</span>

    <div class="blogWriter">
        <label>Yazar</label>
        <br />
        <span style="color:red">@Model.BlogWriter</span>
    </div>

    <div id="commentList" class="comments-section">

        @foreach (CommentViewModel item in Model.Comments)
        {
            @if (item.ParentCommentId == null)
            {
                <div class="comment">


                    <label>@item.CommentWriter</label>
                    <br />
                    <label>@item.CommentText</label>
                    <br />
                    <span>@item.CommentAddTime</span>
                    <br />
                    <button onclick="toggleFunctions(@item.CommentId)">Yanıtla</button>

                    <div id="subAnswer_@item.CommentId" style="display:none">
                    </div>
                    @foreach (var answer in item.CommentAnswers)
                    {
                        <div id="subComment" class="subComment">
                            <label>---------------</label>
                            <br />
                            <label>@answer.CommentId</label>
                            <br />
                            <label>@answer.CommentText</label>
                            <button onclick="toggleFunctions(@answer.CommentId)">Yanıtla</button>
                            <div id="subAnswer_@answer.CommentId" style="display:none">

                            </div>
                            @foreach (var subAnswer in RenderRecursiveComment(answer.CommentAnswers))
                            {
                                @subAnswer
                            }
                        </div>
                    }

                </div>
            }
        }
    </div>

    @if (authService.UserIsAuthenticate())
    {
        <div class="comment-section">
            <h2>Yorum Yap</h2>
            <form id="comment">
                <textarea asp-for="BlogText" id="commentText" name="comment" placeholder="Yorum" required></textarea>
                <button type="submit">Gönder</button>
            </form>
        </div>
    }
    @if (!authService.UserIsAuthenticate())
    {
        <h1>Yorum yapmak için giriş yapmalısınız!</h1>
    }

</div>


@functions {


    IEnumerable<object> RenderRecursiveComment(ICollection<Comment> comments)
    {
        @if (comments != null)
        {


            @foreach (var answer in comments)
            {
                <div id="subComment" class="subComment">
                    <label>---------------</label>
                    <br />
                    <label>@answer.UserId</label>
                    <br />
                    <label>@answer.CommentText</label>
                    <button onclick="toggleFunctions(@answer.CommentId)">Yanıtla</button>
                    <div id="subAnswer_@answer.CommentId" style="display:none">
                    </div>
                    @if (answer.CommentAnswers != null && answer.CommentAnswers.Any())
                    {
                        foreach (var subAnswer in RenderRecursiveComment(answer.CommentAnswers))
                        {
                            yield return subAnswer;
                        }
                    }
                </div>
            }
        }
    }
}

<script>
    function toggleSubAnswer(id) {
        var subAnswerDiv = document.getElementById("subAnswer_" + id);
        console.log("subAnswer_" + id);
        subAnswerDiv.style.display = subAnswerDiv.style.display == "none" ? "block" : "none";
    }

</script>

<script>
    function toggleFunctions(id) {
        toggleSubAnswer(id);
        commentAnswerToggle(id)
    }

</script>

<script>
    console.log("girdi");
    function commentAnswerToggle(itemId) {
        $.ajax({
            type: 'GET',
            url: '/Blogs/CommentAnswer/' + itemId,
            success: function (data) {
                $("#subAnswer_" + itemId).html(data);
            },
            error: function (xhr, status, error) {
                console.error(xhr.responseText);
            }
        });
    }


</script>

<script>
    var jq = jQuery.noConflict();

    jq(document).ready(function () {
        jq('#comment').on('submit', function (event) {
            event.preventDefault();

            var commentText = jq('#commentText').val();
            var commentWriter = jq('#commentWriter').val();
            var commentAddTime = new Date();

            jq.ajax({
                url: '@Url.Action("GetBlog", "Blogs")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    commentText: commentText,
                    commentWriter: commentWriter,
                    commentAddTime: commentAddTime.toISOString()
                }),
                success: function (data) {

                    var newComment = jq('<div>').addClass("comment")
                    newComment.append(jq('<p>').addClass("username").text(commentWriter));
                    newComment.append(jq('<p>').addClass("comment-text").text(commentText));
                    newComment.append(jq('<p>').addClass("comment-date").text(commentAddTime));
                    jq('#commentList').append(newComment);
                }
            });
        });
    });
</script>




